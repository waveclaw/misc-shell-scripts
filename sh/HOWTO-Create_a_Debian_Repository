#!/bin/sh
############################################################################
# TITLE       : Debian Pool Tool
# PROJECT     : repositories 
# ENGINEER    : waveclaw
# PROGRAM     : repostiory
# FILE        : HOWTO-Create_a_Debian_Repository
# CREATED     : 04-APR-2010
# DESCRIPTION : Builds a "Standard" Debian Repository per 
#	http://www.debian.org/doc/manuals/repository-howto/repository-howto
# ASSUMPTIONS : Familiarity with bash 
############################################################################
#                          RELEASE LISCENSE              
#
#       This file is available under copyright 2014. 
#       For internal use only, keep out of young children. 
#                                                                        
#       Other Copyrights to their respective owners.                           
#                                                                        
#  Current version : 0.1
#  Latest version  : 0.1
#  Bugs, Comments  : waveclaw@waveclaw.net
############################################################################
#                          RELEVANT DOCUMENTS
#                           (REFERENCES)
#
#  Name                            Comment
#  ------------------------------- -------------------------------------
#  Shellfiles in a Nutshell         primary Shell File resource          
#  unix.stackexchange.com           rsync filter syntax
#  parchive.sourceforge.net         Parity Archive Tool
# 
############################################################################

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/sbin
if [ `which dpkg-scanpackages` ]
then
  :
else
  echo "Missing dpkg-scanpackages!"
  exit 1
fi
if [ `which dpkg-scansources` ]
then
  :
else
  echo "Missing dpkg-scansources"
  exit 1
fi

# This script is setup to populate packages into 'testing'
# With some minor changes to the logic it can support other releases, too.
NAME=debian_standard_repository
SOURCE=/tmp/pool
TARGET=/tmp/repo
# no practical way to detect this at runtime
deb_release=testing 
# there are 11 of these in a full debian repo
supported_archs="i386 x86_64" 

usage() {
echo "Usage: `basename $0`"
cat <<EOUSE

Parameters
 -d path Location of the repository
 -s path Location of the .deb files 

Options
 -h      This help text
EOUSE
}

while [ 0 -lt $# ]
do
case "$1" in
 -h)
   usage
   exit 0
   ;;
 -s)
  shift
  SOURCE=$1
  shift
  ;;
 -d)
  shift
  TARGET=$1
  shift
  ;;
 *)
  echo "Unkown option $1"
  echo
  usage
  exit 1
  ;;
esac
done

if [ \! -d $SOURCE ]
then
  echo "Invalid $SOURCE"
  usage
  exit 1
fi

#repo signing is not used at this time
# KEYRING="$root/gpg-keyring-foo-bar.keyring"  

echo Step 0: Clean out any cruft
if [ -d $TARGET ] ; then rm -rf $TARGET ;fi

echo Step 1: Create the Standard Debian Repository layout
echo "$TARGET"
echo '|'
echo '+-dists'
for release in `echo stable testing unstable`;do  {
  echo "  |-$release"
  for component in `echo main contrib non-free`;do  {
   echo "  | |-$component"
   for arch in `echo $supported_archs`;do  {
     echo "  | | |-binary-$arch";
     mkdir -p "$TARGET/dists/$release/$component/binary-$arch"
    } ; done
     echo "  | | +-source"
     mkdir -p "$TARGET/dists/$release/$component/source"
   } ; done 
  echo "  |"
} ; done


echo "Step 2: Copy all your .deb files to their proper places."
# note how this section assume we only have .debs and .dsc for the 
# current installed release and not all possible releases
for arch in `echo $supported_archs`;do {
  # main <-> pure, free, or OSS
  # non-free <-> well, duh
  # contrib <-> depends on non-free (we play safe and use contrib)
  dest="$TARGET/dists/$deb_release/contrib/binary-$arch"
  find "$SOURCE" -name "*${arch}*.deb" -type f -exec cp "{}" "$dest"/ \;
} ; done
dest="$TARGET/dists/$deb_release/contrib/source"
find "$deb_pool" -name "*.dsc" -type f -exec cp {} "$dest" \;

echo "Step 3: Build desriptions of the files in their proper places."
for release in `echo stable testing unstable`;do  {
  for component in `echo main contrib non-free`;do {
     pushd "$root/$TARGET/dists/$release/$component/"
     for arch in `echo $supported_archs`;do {
       if [ 0 -lt `ls binary-$arch | wc -l` ]; then {
        dpkg-scanpackages binary-$arch /dev/null | gzip -9c > binary-$arch/Packges.gz
       } ; fi
     } ; done
     if [ 0 -lt `ls source | wc -l` ]; then {
       dpkg-scansources source /dev/null | gzip -9c > source/Sources.gz
     } ;fi
     # return home
     popd
  } ; done
} ; done

echo "Step 4: Build the Release files to Pin the release"
# having to dupe this file everywhere is, well, stupid
# this assume the last cd $root returned, as well.
for release in stable testing unstable
do
for component in main contrib non-free
do
for arch in `echo $supported_archs`
do 
 dir="$TARGET/dists/$release/$component/binary-$arch"
 cat << EO_RELEASE >> "${dir}/Release"
Archive: ${release}
Component: ${component}
Origin: example.net Packaging Team
Label: example.net Debian repository
Architecture: ${arch}
EO_RELEASE
# signing not used at this time
# md5sum ${dir}/*.deb | sed -e 's+${dir}++g' >> ${dir}/Release
# gpg --no-default-keyring --secret-keyring ${KEYRING} \
#        --passphrase "Don't forget to use strong passphrases." \
#        -a --detach-sign "${dir}/Release"
# if [ -f Release.gpg ] ; then mv Release.gpg "${dir}/Release.gpg" ;fi
done
dir="$TARGET/dists/$release/$component/source"
cat << EO_SRC_RELEASE >> "${dir}/Release"
Archive: ${release}
Component: ${component}
Origin: example.net Packaging Team
Label: example.net Debian repository
Architecture: source
EO_SRC_RELEASE
# signing not used at this time
# md5sum ${dir}/*.deb | sed -e 's+${dir}++g' >> "${dir}/Release"
# gpg --no-default-keyring --secret-keyring ${KEYRING} \
#        --passphrase "Don't forget to use strong passphrases." \
#        -a --detach-sign "${dir}/Release"
# if [ -f Release.gpg ] ; then mv Release.gpg "${dir}/Release.gpg" ;fi
done
done

echo Step 5: [Optional] Add the repository to /etc/apt/sources.list
echo deb file:://$TARGET $deb_release main contrib non-free
echo deb-src file:://$TARGET $deb_release main contrib non-free   


